---

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: metadata
  type: docker-image
  source:
    repository: olhtbr/metadata-resource
    tag: 2.0.1

resources:
- name: ecr-govwifi-reg
  type: registry-image
  source:
    aws_access_key_id: "((deploy-access-key-id))"
    aws_secret_access_key: "((deploy-secret-access-key))"
    aws_region: "((deploy-region))"
    repository: "govwifi/smoke-tests"

- name: git-repo
  type: git
  source:
    uri: https://github.com/alphagov/govwifi-smoke-tests.git
    branch: main

- name: interval-60m
  type: time
  source:
    interval: 60m

- name: notify
  type: slack-notification
  source:
    url: ((slack-webhook))

- name: metadata
  type: metadata

jobs:
- name: push-to-ecr
  plan:
  - get: git-repo

  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task

      inputs:
      - name: git-repo
        path: .

      outputs:
      - name: image

      run:
        path: build

  - put: ecr-govwifi-reg
    params:
      image: image/image.tar

- name: run-prod-tests
  plan:
  - get: interval-60m
    trigger: true

  - put: metadata

  - task: get-failure-message
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: busybox
      inputs:
        - name: metadata
      outputs:
        - name: properties
      run:
        path: sh
        args:
          - -exc
          - |
            atc_external_url=$(cat metadata/atc_external_url)
            build_team_name=$(cat metadata/build_team_name)
            build_pipeline_name=$(cat metadata/build_pipeline_name)
            build_job_name=$(cat metadata/build_job_name)
            build_name=$(cat metadata/build_name)
            echo "Production Smoke Test Failure: $atc_external_url/teams/$build_team_name/pipelines/$build_pipeline_name/jobs/$build_job_name/builds/$build_name" > properties/failure_message

  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          aws_access_key_id: "((deploy-access-key-id))"
          aws_secret_access_key: "((deploy-secret-access-key))"
          aws_region: "((deploy-region))"
          repository: "govwifi/smoke-tests"
      run:
        path: bundle
        args: ["exec", "rspec"]
        dir: ../../../usr/src/app
      inputs:
      - name: properties
      params:
        DOCKER: docker
        GW_USER: "((GW_USER))"
        GW_PASS: "((GW_PASS))"
        GW_2FA_SECRET: "((GW_2FA_SECRET))"
        GOOGLE_API_CREDENTIALS: "((GOOGLE_API_CREDENTIALS))"
        GOOGLE_API_TOKEN_DATA: "((GOOGLE_API_TOKEN_DATA))"
        RADIUS_KEY: "((RADIUS_KEY))"
        RADIUS_IPS: "((RADIUS_IPS))"
        STAGING: 0
    on_failure:
      put: notify
      params:
        text_file: properties/failure_message

- name: run-staging-tests
  plan:
  - put: metadata

  - task: get-failure-message
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: busybox
      inputs:
        - name: metadata
      outputs:
        - name: properties
      run:
        path: sh
        args:
          - -exc
          - |
            atc_external_url=$(cat metadata/atc_external_url)
            build_team_name=$(cat metadata/build_team_name)
            build_pipeline_name=$(cat metadata/build_pipeline_name)
            build_job_name=$(cat metadata/build_job_name)
            build_name=$(cat metadata/build_name)
            echo "Staging Smoke Test Failure: $atc_external_url/teams/$build_team_name/pipelines/$build_pipeline_name/jobs/$build_job_name/builds/$build_name" > properties/failure_message

  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          aws_access_key_id: "((deploy-access-key-id))"
          aws_secret_access_key: "((deploy-secret-access-key))"
          aws_region: "((deploy-region))"
          repository: "govwifi/smoke-tests"
      run:
        path: bundle
        args: ["exec", "rspec"]
        dir: ../../../usr/src/app
      inputs:
      - name: properties
      params:
        DOCKER: docker
        GW_USER: "((STAGING_GW_USER))"
        GW_PASS: "((STAGING_GW_PASS))"
        GW_2FA_SECRET: "((STAGING_GW_2FA_SECRET))"
        GOOGLE_API_CREDENTIALS: "((GOOGLE_API_CREDENTIALS))"
        GOOGLE_API_TOKEN_DATA: "((GOOGLE_API_TOKEN_DATA))"
        RADIUS_KEY: "((STAGING_RADIUS_KEY))"
        RADIUS_IPS: "((STAGING_RADIUS_IPS))"
        STAGING: 1
    on_failure:
      put: notify
      params:
        text_file: properties/failure_message
